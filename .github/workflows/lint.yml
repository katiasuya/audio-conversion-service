---

name: Lint Code Base

#
# Documentation:
# https://help.github.com/en/articles/workflow-syntax-for-github-actions
#

#############################
# Start the job on all push #
#############################
on:
  push:

###############
# Set the Job #
###############
jobs:
  build:
    # Name the Job
    name: Lint Code Base
    # Set the agent to run on
    runs-on: ubuntu-latest

    ##################
    # Load all steps #
    ##################
    steps:
      ##########################
      # Checkout the code base #
      ##########################
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # - name: install dependencies
      #   run: sudo apt update && sudo apt install libsnmp-dev    


      ################################
      # Run Linter against code base #
      ################################
      # - name: Lint Code Base
      #   uses: github/super-linter@v3
      #   env:
      #     VALIDATE_ALL_CODEBASE: true

      #     DEFAULT_BRANCH: main
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run golangci-lint
  # You may pin to the exact commit or the version.
  # uses: golangci/golangci-lint-action@5c56cd6c9dc07901af25baab6f2b0d9f3b7c3018
        uses: golangci/golangci-lint-action@v2.5.2
        with:
    # # version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
    # version: # optional
    # # golangci-lint command line arguments
    # args: # optional, default is 
    # # golangci-lint working directory, default is project root
    # working-directory: # optional
    # # the token is used for fetching patch of a pull request to show only new issues
    # github-token: # default is ${{ github.token }}
    # if set to true and the action runs on a pull request - the action outputs only newly found issues
          only-new-issues: false
    # # if set to true then action uses pre-installed Go
    # skip-go-installation: 
   

...
