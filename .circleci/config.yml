---
version: 2.1

orbs:
  aws-cli: circleci/aws-cli@2.0

jobs:
  test:
    docker:
      - image: circleci/golang:1.15.8
        auth:
          username: katiasuya
          password: $DOCKERHUB_PASSWORD
      - image: postgres:13-alpine
        environment:
          POSTGRES_PASSWORD: $POSTGRES_PASSWORD

    parallelism: 2

    environment: 
      TEST_RESULTS: /tmp/test-results
      HOST: localhost
      PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_DB: audioconverter
      SSLMODE: disable
      STORAGEPATH: "/tmp"
    steps:
      - checkout
      - run: mkdir -p $TEST_RESULTS 
      - restore_cache:
          keys:
            - go-mod-v4-{{ checksum "go.sum" }}
      - run:
          name: Install dependencies
          command: go mod download
      - run:
          name: Install psql
          command: sudo apt-get -y update && sudo apt-get install -y postgresql-client
      - run:
          name: Waiting for Postgres to be ready
          command: >-
            dockerize -wait
            tcp://localhost:5432
            -timeout 1m     
      - save_cache:
          key: v1-pkg-cache
          paths:
            - /home/circleci/go/pkg/mod
      - run:
          name: Run tests
          command: go test ./...
      - run:
          name: Create database schema
          command: >-
            psql postgres://postgres:$POSTGRES_PASSWORD@localhost:5432 
            --variable=user_var=TestUser 
            --variable=password_var=TestPassword 
            -f ./scripts/schema.sql
      - run:
          name: Start service
          command: go run cmd/main.go
          background: true 
      - run:
          name: Wait for port to be listened
          command: >-
            dockerize -wait
            tcp://localhost:8000
            -timeout 1m
      - run:
          name: Validate service is working by auth
          command: >-
            curl --retry 10 --retry-delay 1 -X POST
            --header "Content-Type: application/json"
            -d '{"username":"TestUser", "password":"qwerty123"}'
            http://localhost:8000/user/signup    
      - store_artifacts:
          path: /tmp/test-results
          destination: raw-test-output
      - store_test_results:
          path: /tmp/test-results

  build:
    docker:
      - image: circleci/golang:1.15.8
    environment: 
      GOOS: linux
      CGO_ENABLED: 0
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: go mod download
      - run: 
          name: Build service
          command: go build cmd/main.go
      - run: 
          name: Zip binary
          command: zip function.zip main
      - save_cache:
          key:  checksum "function.zip" 
          paths:
            - function.zip

  deploy:
    executor: aws-cli/default
    steps:
      - restore_cache:
          key:  checksum "function.zip" 
      - aws-cli/setup
      - run: 
          name: Deploy to lambda
          command: aws lambda update-function-code --function-name a1-AudioConverterFunction-hFpmG5dIlkUR --zip-file fileb://function.zip

workflows:
  version: 2.1
  build-workflow: 
    jobs: 
      - test
      - build: 
          requires: 
            - test
      - deploy:
          requires: 
            - build
...
